<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.netbeans.html</groupId>
    <artifactId>pom</artifactId>
    <version>1.2.3</version>
  </parent>
  <groupId>org.netbeans.html</groupId>
  <artifactId>xhr4j</artifactId>
  <version>1.2.3</version>
  <packaging>bundle</packaging>
  <name>XHR via Java</name>
  <url>http://maven.apache.org</url>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.netbeans.html</groupId>
                <artifactId>html4j-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <skip>false</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <bundleSymbolicName>org.netbeans.html.xhr4j</bundleSymbolicName>
  </properties>
  <dependencies>
    <!-- compile only deps -->
    <dependency>
      <groupId>org.netbeans.api</groupId>
      <artifactId>org-openide-util-lookup</artifactId>
      <type>jar</type>
      <scope>provided</scope>
    </dependency>

    <!-- compile + runtime -->      
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>net.java.html</artifactId>
      <version>${project.version}</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>net.java.html.json</artifactId>
      <version>${project.version}</version>
      <type>jar</type>
    </dependency>
    <!-- test only deps -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>net.java.html.boot</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>net.java.html.json.tck</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>ko4j</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>org.glassfish.grizzly</groupId>
      <artifactId>grizzly-http-server-core</artifactId>
      <version>${grizzly.version}</version>
      <scope>test</scope>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>org.glassfish.grizzly</groupId>
      <artifactId>grizzly-websockets-server</artifactId>
      <version>${grizzly.version}</version>
      <scope>test</scope>
      <type>jar</type>
    </dependency>
    <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>net.java.html.boot.fx</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.grizzly</groupId>
      <artifactId>grizzly-http-server</artifactId>
      <version>${grizzly.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>org.glassfish.grizzly</groupId>
        <artifactId>grizzly-http-servlet</artifactId>
        <version>${grizzly.version}</version>
        <scope>test</scope>
    </dependency>    
    <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <scope>test</scope>
    </dependency>
  </dependencies>
    <description>Implementation module with support for XHR via Java.
Use it to workaround CORS limitations.</description>
</project>
